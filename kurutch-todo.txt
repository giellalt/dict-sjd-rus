Kurutch sjd-rus

Todo:

automatically:
1. merge of original reference entries (i.e. having kur_ID) with content entries (i.e. without ID) 
   trigger: string (watch out for ambiguities)

2. gt_dict structure: mapping like in the following example:
   
<e kur_ID="xxx">
	<lg>
		<l pos="xxx">xxx</l>
		<STEM>xxx</STEM> (1-100: z. 55)
		<CLASS>xxx</CLASS> (1-100: z. 56)
	</lg>
	<mg>
     <tg>
     	<semantics>
			<sem class="xxx"/>
		</semantics>

		 (1-100: z. 72, komma mapped on different t-elements)
		 
         (1-100: z. 1348, semicollon mapped on different tg-elements)
		 
		 (z. 136: different meaning groups: relevant order???)
		 
		 (z. 136: after dash/bracket/etc. = re)

TAM-element = grammar info (aspect, etc.); scopus is tg-element!!!

(z. 324: scopus tg-element) 
<RE>PRJAM,PEREN</RE>

			<t pos="xxx" xml:lang="xxx">xxx</t>
			<xg>
				<x type="xxx">xxx</x>
				<xt xml:lang="xxx">xxx</xt>
			</xg>

examples of <x> with several translations:
(101-500: z. 3258)
		<X>ва̄лльтэ ва̄лт</X>
		<XT xtnumber="1">завоевать свободу</XT>
		<XT xtnumber="2">стать своевольным</XT>
			
            <xg type=idiom subtype=blabla>
				<x>xxx</x>
				<xt xml:lang="xxx">xxx</xt>
			</xg>

example for idiom subtype (idiom groups are preliminary marked by # preceeding the whole group; idioms are always at the end of an <e> or <mg> (no other <x> following them):			

<X>парна бальяк, шӯрран — лӯјкак</X>
		<XT>POSLOVICA [ребёнка] маленького балуешь - с большим плачешь</XT>

		</tg>
	</mg>
</e>


101-500: z. 3536
		<T>выделывать/ выделать (шкуру крюком<LOOKUP xml:lang="sjd">крӯһкь</LOOKUP>
		</T>


3. non-capitals in the element <L>

4. rules for automatic PoS tagging (most of them are already included in the script)
d) verbs have these tags somewhere in the entry:
<LINK type="PONUD_K"></LINK>
<LINK type="STRAD_K"></LINK>
<RE>BESL</RE>
<TAM>

5. the tags x_GENDER (z.B. F_GENDER, etc.) x_NUMBER (z.B. PL_NUMBER, etc.) should be transfered into an attribute of <t>; PoS will of course be "n" in these cases (e.g. <t pos="n" gender="f"> <t pos="n" number="pl">)

6. solved
-----------------
Problem: Kommas innerhalb von Klammern trennen keine <t>-Elemente
these commas are all replaced by COMMA already
-----------------

7. conversion of parentheses inside <t>
if the text in parentheses start with the word "о" it is most likely a <re>, e.g.
<t>выделаться (о шкуре)</t>
is to be converted into -->
<re>о шкуре</re>
<t>выделаться</t>
if the text in parentheses start with the word "напр." it is most likely a <te>, e.g.
<t>надраивание</t>
<t>натирка (напр. полов)</t>
is to be converted into -->
<t>надраивание</t>
<t>натирка</t>
<te>напр. полов</t> 

8. grammatical indicators inside <t>
ж F(emininum)
м M(asculinum)
с N(eutrum)
мн. Pl(uralis)
e.g.
<t>боль ж (душевная)</t>
<t>дождь м</t>
<t>будни мн.</t>
most of them are already tagged as F_GENDER, PL_NUMBER, etc.

9. aspect pairs in <t>
are always marked by / , perfective aspect seems always to be first, e.g.
<t>покрывать / покрыть</t>
is to be converted into -->
<t aspect="perf">покрывать</t>
<t aspect="imperf">покрыть</t>
a following parenthesis (<re> or <te>) has scope on the whole <tg>, e.g.
<t>убегать / убежать (о супе, молоке при кипении)</t>
is to be converted into -->
<re>о супе, молоке при кипении</re>
<t aspect="perf">убегать</t>
<t aspect="imperf">убежать</t>


===============

-wenn es mehrere Bedeutungen gibt (im Sinne von unseren <mg>), habe ich die Nummerierung der Übersetzungen aus dem Original behalten (tnumber=.…). Die Autoren des Originalwörterbuches haben sich wahrscheinlich bei der Reihenfolge der verschiedenen Bedeutungen etwas gedacht. Deshalb wollte ich gern diese Angabe behalten.
+wenn es mehrere "nahe Übersetzungen" gibt, sind diese innerhalb des Elements <T> mit Komma getrennt…
+wenn es mehrere "entferntere Übersetzungen gibt, sind diese innerhalb des Elements <T> mit Semikolon getrennt…
+wenn es russische Aspektpaare innerhalb des Elements <T> gibt, sind diese mit Slash getrennt, z.B. <T tnumber="1">кусать, укусить кого-что ; откусывать / откусить что, чего</T>

-warum haben <re>, <te>, <tf>, <xt> kein Sprachattribut, aber <t>
 schon (z.B. xml:lang="nob")? Wenn wir schon wissen, dass es
 sma<-->nob ist brauchen wir eigentlich gar keins. Aber wenn wir
 zeigen wollen, dass der folgende Text zu einer bestimmten Sprache
 gehört, ist das für <xt> usw. doch auch relevant. @cip: ich habe
 gelernt, flexibel damit zu sein. Wir werden sehen, wie sich das
 kristalliesiert, wenn wir wirklich in Richtung Cip's dream gehen.


Hier sind die Muster von den gemischten Knoten.
sjdrus>grep '<todo ' output_kt2gt/kurutch1985_1-1000.xml | sort | uniq -c | sort -nr  
 171          <todo n_pattern="txt_tam">
 108          <todo n_pattern="txt_tam_tam">
  36          <todo n_pattern="re_txt">
  14          <todo n_pattern="re_txt_tam">
   6          <todo n_pattern="re_txt_tam_tam"
--------------------------------------
   4          <todo n_pattern="txt_link"> (darueber haben wir jetzt geredet)
-->these are two different problems, which I fixed manually
-->1)since the scopus of the first of these "links" is the lemma and since it gives grammatic information I've created a new element for these things: <DER> =derivation; this new element belongs to <lg>, e.g.
<DER type="STRAD_K">балъе</DER>
and reads as follows:
DER of the type "strad_k" of the verb "балъе"
-->2)for the other "link" I've also created a new element in <lg>: <COMPARE>; it points to another lemma with the same meaning, e.g. <COMPARE>камаша</COMPARE>
--------------------------------------
   2          <todo n_pattern="sem_txt"> (??? --> take a look!)
--> this belongs to the element <SEM> = semantics, e.g. MEDicine, RELigion; scopus should be the meaning group; you have created this element "semantics" already with xxx, for a few entries (like these) a value is given in the dict 
--------------------------------------
   2          <todo n_pattern="pos_txt">  (??? --> take a look!)
-->fixed manually (lexicographically odd entry in the original dict (one lemma which is both adverb and postposition; I made two entries)
--------------------------------------
   1          <todo n_pattern="txt_tam_txt_tam">  (check scope of tam!)
-->fixed manually (lexicographically odd entry in the original dict (one meaning group with different meanings; I made two meaning groups)
--------------------------------------   
   1          <todo n_pattern="txt_tam_txt"> (check scope of tam!)
-->fixed manually (mistake in my original tagging)
--------------------------------------
   1          <todo n_pattern="txt_tam_tam_tam">
-->just one more tam as compared to "re_txt_tam_tam" above
--------------------------------------
   1          <todo n_pattern="txt_saam_link_txt_class_txt">   (??? --> take a look!)
-->fixed manually (lexicographically odd entry in the original dict: one entry with two lemmas; I made two entries)
--------------------------------------
   1          <todo n_pattern="re_txt_tam_tam_tam">
-->just one more tam as compared to "re_txt_tam_tam" above

===================================

sjdrus>grep '<todo ' output_kt2gt/kurutch1985_1-1000.xml | sort | uniq -c | sort -nr   173          <todo n_pattern="txt_tam">
 108          <todo n_pattern="txt_tam_tam">
  36          <todo n_pattern="re_txt">
  14          <todo n_pattern="re_txt_tam">
   6          <todo n_pattern="re_txt_tam_tam">
   2          <todo n_pattern="sem_txt">
   1          <todo n_pattern="txt_tam_tam_tam">
   1          <todo n_pattern="re_txt_tam_tam_tam">


